#pragma once

#include "joy_stack.h"

namespace joy { 

	// idiomatically equivalent to the C date and time utilities 
	// (Manfred von Thun's original JOY interpreter was implemented in C)

	/**
	* clock :->I
	* Pushes the integer value of current CPU usage in hundredths of a second.
	*/
	void clock(joy_stack& S);

	/**
	* time : ->I
	* Pushes the current time(in seconds since the Epoch).
	*/
	void time(joy_stack& S);

	/**
	* localtime : I->T
	* Converts a time I into a list T representing local time : [year month day hour minute second isdst yearday weekday] .Month is 1 = January...12 = December; isdst is a Boolean flagging daylight savings / summer time; weekday is 0 = Monday...7 = Sunday.
	* i.e. equivalent to the std::tm struct from the C-style date and time utilities
	*/
	//void localtime(joy_stack& S);

	/**
	* gmtime : I->T
	* Converts a time I into a list T representing universal time : [year month day hour minute second isdst yearday weekday] .Month is 1 = January...12 = December; isdst is false; weekday is 0 = Monday...7 = Sunday.
	* i.e. equivalent to the std::tm struct from the C-style date and time utilities
	*/
	//void gmtime(joy_stack& S);

	/**
	* mktime : T->I
	* Converts a list T representing local time into a time I. T is in the format generated by localtime.
	* i.e. std::mktime
	*/
	//void mktime(joy_stack& S);

	/**
	* strftime : T S1->S2
	* Formats a list T in the format of localtime or gmtime using string S1 and pushes the result S2 .
	* i.e. std::stftime
	*/
	//void strftime(joy_stack& S);

}