# MODULE math

_mathlib == true;

# PRIVATE - todo: fix: enable public to use private 

(*
 * Newton Raphson approx. method square root
 * 24 iterations should get good enough approximation - TODO: check the abs difference
 *)

_sqrt == 24 [dup] times
		 24 [dup swapd dup dup * swap 2.0 * rotate - swap / -] times.

PUBLIC

    # constants
    
    e == 2.718281828;
    pi == 3.14159265359;

    # functions
    
    sqrt == [float][_sqrt]["sqrt expects float" putchars newline] ifte;

    # factorial using genrec
    ! == [null][succ][dup pred][i *] genrec;

    exp ==
        e swap
        [null]
        [pop pop 1]
        [pred dupd]
        [*]
        linrec;

    # calculate the nth fibonacci value
    fib == [small][id][pred dup pred][app2 + ] genrec;

END

"mathlib is loaded"  putchars newline.

#b - qsort == [small][id][uncons[> ] split][swapd cons concat] binrec;
